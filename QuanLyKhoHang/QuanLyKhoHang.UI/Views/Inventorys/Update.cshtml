
@using QuanLyKhoHang.UI.Models
@model InventoryInfoDetails
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";

}
<div class="x_panel">
    <div class="x_title">
        <h2><i class="fa fa-pencil"></i>@(Model.Inventory == null ? "Thêm mới biên bản kiểm kê" : "Cập nhật biên bản")</h2>
        <div class="clearfix"></div>
        <ul class="nav nav-tabs bar_tabs nhomquyen col-md-12" role="tablist">
            <li role="presentation" class="active"><a href="#" id="thongtincoban">Thông tin cơ bản</a></li>
        </ul>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        <form id="frm-capnhat" method="post" enctype="multipart/form-data" novalidate="novalidate" class="fv-form fv-form-bootstrap">
            @*<button type="submit" class="fv-hidden-submit" style="display: none; width: 0px; height: 0px;"></button>*@
            <input type="hidden" id="Id" name="Id" value="@(Model.Inventory != null ? Model.Inventory.Id:0)" />
            <div class="col-md-12 col-sm-12 col-xs-12 clearfix">
                <div class="form-group col-md-4 col-sm-4 col-xs-12">
                    <label class="control-label" for="first-name">Mã biên bản</label>
                    <div>
                        <input type="text" class="form-control" id="Code" name="Code" readonly value="@(Model.Inventory != null ? Model.Inventory.Code:"" )" autocomplete="off" )>
                    </div>
                </div>
                <div class="form-group col-md-4 col-sm-4 col-xs-12">
                    <label class="control-label" for="first-name">Chọn người lập phiếu kiểm kê</label>
                    <div>
                        <select class="ctr-select" data-live-search="true" id="UserId" name="UserId" disabled="@(Model.Inventory != null)">
                            @Html.Raw(ViewBag.cbxUser)
                        </select>
                    </div>
                </div>
                <div class="form-group col-md-4 col-sm-4 col-xs-12">
                    <label class="control-label" for="first-name">Ngày lập biên bản kiểm kê</label>
                    <div>
                        <input type="text" class="form-control" id="CreatedDate" name="CreatedDate" readonly value="@(Model.Inventory == null ? DateTime.Now.ToString("dd/MM/yyyy"): Model.Inventory.CreatedDate.Value.ToString("dd/MM/yyyy"))" autocomplete="off" )>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12 clearfix">

                <div class="form-group col-md-12 col-sm-12 col-xs-12">
                    <label class="control-label" for="first-name">Nội dung biên bản</label>
                    <div>
                        <textarea class="form-control" id="Note" name="Note">@(Model.Inventory != null ? Model.Inventory.Note : "")</textarea>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12 clearfix">
                <div class="form-group col-md-12 col-sm-12 col-xs-12">
                    <label class="control-label" for="first-name">Danh sách sản phẩm đã kiểm kê :</label>
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12 clearfix">
                <div class="form-group col-md-4 col-sm-4 col-xs-12">
                    <label class="control-label" for="first-name">Tìm kiếm sản phẩm:</label>
                    <div>
                        <select class="ctr-select" data-live-search="true" multiple id="product" name="product">
                            @Html.Raw(ViewBag.cbxProduct)
                        </select>
                    </div>
                </div>
                <div class="col-md-3 col-sm-4 col-sm-12">
                    <label class="control-label" for="first-name">Ngày bắt đầu :</label>
                    <div class='input-group date datetimepicker1 col-md-12' id="FromDate">
                        <input type='text' class="form-control" name="fromDate" id="fromDate"  value="" placeholder="Từ ngày..." autocomplete="off" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="col-md-3 col-sm-4 col-sm-12">
                    <label class="control-label" for="first-name">Ngày kết thúc :</label>
                    <div class='input-group date datetimepicker1 col-md-12' id="ToDate">
                        <input type='text' class="form-control" name="toDate" id="toDate" value="@DateTime.Now.ToString("dd/MM/yyyy")" placeholder="Đến ngày..." autocomplete="off" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 col-sm-2 col-sm-12">
                    <label class="control-label" for="first-name"></label>
                    <div>
                        <a class="btn btn-primary" onclick="DanhSach();">Tìm kiếm</a>
                        <a class="btn btn-primary" onclick="Export_Excel();" download="">Xuất Excel</a>
                    </div>
                    
                </div>

            </div>

            @* lap o de tim nhap so luong san pham se duoc kiem ke chon ra roi khong can hidden*@
            <div class="x_content table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="text-center" width="60">STT</th>
                            <th class="text-center" width="150">Mã sản phẩm</th>
                            <th class="text-center" width="150">Tên sản phẩm</th>
                            <th class="text-center" width="100">Mã hóa đơn</th>
                            <th class="text-center" width="150">Ngày nhập</th>
                            <th class="text-center" width="150">Ngày hết hạn</th>
                            <th class="text-center" width="100">Đơn vị tính</th>
                            <th class="text-center" width="150">Đơn giá</th>
                            <th class="text-center" width="150">Tổng số sản phẩm</th>
                            <th class="text-center" width="300">Tổng số đã nhập thực tế</th>
                            <th class="text-center" width="150">Tổng số còn lại</th>
                            <th class="text-center" width="300">Tổng số sản phẩm còn lại thực tế</th>
                            <th class="text-center" width="150">Trạng thái</th>
                            <th class="text-center" width="800">Mô tả</th>

                        </tr>
                    </thead>
                    <tbody id="listProduct"></tbody>
                </table>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12 clearfix">
                <div class="clearfix"></div>
                <div class="ln_solid"></div>

                <div class="form-group clearfix">
                  
                    <div class="col-md-12 col-sm-12 col-xs-12 text-right">
                        <a class="btn btn-primary" href="@Url.Action("MainPage","Orders", new { area = "QuanTri"})">Hủy</a>
                        <button id="btn-save" type="button" onclick="saveData()" class="btn btn-success">Lưu thông tin</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="modal" tabindex="-1" role="dialog" id="modal-capnhatthongtin"></div>
<div class="modal" tabindex="-1" role="dialog" id="modal-themmoithongtin"></div>

<style>
    .subElement {
        padding-bottom: 50px;
    }
</style>
<script>
    $(document).ready(function () {
        $(".ctr-select").selectpicker({
            width: '100%',
            showTick: true,
        });
        DanhSach();
    });
    $(function () {
        $('#FromDate').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#ToDate').datetimepicker({
            format: 'DD/MM/YYYY',
            useCurrent: false //Important! See issue #1075
        });
        $("#FromDate").on("dp.change", function (e) {
            $('#ToDate').data("DateTimePicker").minDate(e.date);
        });
        $("#ToDate").on("dp.change", function (e) {
            $('#FromDate').data("DateTimePicker").maxDate(e.date);
        });
    });
    function DanhSach() {
        $("#listProduct").html("<tr><td colspan='19'><img src='/Files/images/system/loading.gif' style='margin: auto auto;display: block;margin-top: 20px;height:80px;' /></td></tr>");
        $("#listProduct").load("@Url.Action("ListProduct", "Inventorys", new { area = "QuanTri"})?listProduct=" + $('#product').val() + "&Id=" + $('#Id').val() + "&startDate=" + $('#fromDate').val() + "&endDate=" + $('#toDate').val());
    }

    $(document).on("change", "[name=product]", function () {
        DanhSach();

    })
</script>
<script>
    let dataModel = "";
    let dataTable = "";
    $(function () {
        $('#ValueDate').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#ExpireDate').datetimepicker({
            format: 'DD/MM/YYYY',
        });
    });


    $(document).on("change", "[name=OrderProviderId]", function () {
        var params = {
            id: $('#OrderProviderId').val()
        }

        $.ajax({
            url: '@Url.Action("GetProductByProvider", "Orders", new { area = "QuanTri" })',
            type: 'POST',
            async: false,
            data: params,
            success: function (data) {
                if (data.kq == "ok") {
                    renderProductCode = `<option value="">Chọn sản phẩm.......</option>` + data.data;
                    var htmlDefault = `<select class="ctr-select" onchange="selectProduct('0')" data-live-search="true" id="ProductCode" name="ProductCode"><option value="">Chọn sản phẩm.......</option>` + data.data + `</select>`;
                    $('#Product').html(htmlDefault);
                    var orderType = $('#OrderType').val();

                    if (orderType == '@EnumOrderType.NHAP' || orderType == '@EnumOrderType.XUAT') {
                        $('#listSanPham').removeAttr("hidden", "false");
                        if (orderType == '@EnumOrderType.XUAT') {
                            $('#Order').removeAttr("hidden", "false");
                        }
                    }
                    $(".ctr-select").selectpicker({
                        width: '100%',
                        showTick: true,
                    });
                }
                else {
                    alertify.error(data.msg);
                }
            }
        });

    });

    function fomartDate(jsonDate) {
        var currentTime = Date.parse(jsonDate.match(/\d+/)[0]);
        var month = currentTime.getMonth() + 1;
        var day = currentTime.getDate();
        var year = currentTime.getFullYear();
        var date = day + "/" + month + "/" + year;
        return date;
    }
    var dataProductXuat = "";
    function selectProduct(index) {
        dataProductXuat = "";
        var productId = "";
        if (index == 0) {
            productId = $('#ProductCode').val();
        } else {
            productId = $('#ProductCode' + index).val();
        }
        var params = {
            id: productId
        }
        $.ajax({
            url: '@Url.Action("GetOrderXuatByProduct", "Orders", new { area = "QuanTri" })',
            type: 'POST',
            async: false,
            data: params,
            success: function (data) {
                if (data.kq == "ok") {
                    dataProductXuat = data.data.list;
                    var htmlDefault = `<select class="ctr-select" onchange="selectOrder('` + index + `')" data-live-search="true" id="OrderCode` + index + `" name="OrderCode` + index + `"><option value="">Chọn hóa đơn.......</option>` + data.data.data + `</select>`;

                    if (index == 0) {
                        $('#OrderContent').html(htmlDefault);
                    } else {
                        $('#OrderContent' + index).html(htmlDefault);
                    }

                    $(".ctr-select").selectpicker({
                        width: '100%',
                        showTick: true,
                    });
                }
                else {
                    alertify.error(data.msg);
                }
            }
        });
    }
    function selectOrder(index) {
        var orderId = "";
        orderId = $('#OrderCode' + index).val();
        if (index == 0) {
            $('#ValueDate').val(fomartDate(dataProductXuat.filter(x=>x.Order.OrderId == orderId)[0].OrderDetails.DetailExpiredDate));
            $('#ExpireDate').val(fomartDate(dataProductXuat.filter(x=>x.Order.OrderId == orderId)[0].OrderDetails.DetailExpiredDate));
            $('#ProductUnit').val((dataProductXuat.filter(x=>x.Order.OrderId == orderId)[0].OrderDetails.DetailsUnits));

            $('#ValueDate').attr("readonly", true);
            $('#ExpireDate').attr("readonly", true);
            $('#ProductUnit').attr("readonly", true);
        } else {
            $('#ValueDate' + index).val(fomartDate(dataProductXuat.filter(x=>x.Order.OrderId == orderId)[0].OrderDetails.DetailExpiredDate));
            $('#ExpireDate' + index).val(fomartDate(dataProductXuat.filter(x=>x.Order.OrderId == orderId)[0].OrderDetails.DetailExpiredDate));
            $('#ProductUnit' + index).val((dataProductXuat.filter(x=>x.Order.OrderId == orderId)[0].OrderDetails.DetailsUnits));

            $('#ValueDate' + index).attr("readonly", true);
            $('#ExpireDate' + index).attr("readonly", true);
            $('#ProductUnit' + index).attr("readonly", true);

        }
    }
    function removeCurElement($cur) {
        $i = 0;
        $pos = 0;
        for ($i; $i < $arr.length; $i++) {
            if ($arr[$i] == $cur) {
                $pos = $i;
                $arr.splice($i, 1);
            }
        }
        $('.subElement')[$pos].remove();
        current = current - 1;
    }



    function formatCurrency(target) {
        const pat = /(\,[0-9]{0,3})$/gm;

        if (pat)
            var separate = ".";
        var s = target.value.toString().split('.').join("");
        var regex = /\B(?=(\d{3})+(?!\d))/g;

        if (s.includes(',')) {
            s = s.split(',');
            var ret = s[0].replace(regex, separate);
            ret = ret + ',' + s[1];
        } else {
            var ret = s.replace(regex, separate);
        }
        target.value = ret;
    }

    function validateNumber(e) {
        if ((e.keyCode > 47 && e.keyCode < 58) || e.keyCode == 44)
            return true;
        else
            return false;
    }
    function checkValid(value) {
        if (value == '' || value == null) return false;
        else {
            const patt = /[\'\"\!\#\$\%\^\&\*\(\)\<\>]/g;
            const res = patt.test(value);
            return res;
        }
    }
</script>

<script>
    mnActive = "mn-inventory";
    $(document).ready(function () {
        $(".ctr-select").selectpicker({
            width: '100%',
            showTick: true,
        });
    })
    $(document).on('keyup', '#UserName', function () {
        var userName = $("#UserName").val();
        var convert = change_alias(userName);
        $("#UserName").val(convert);
    });
    $(document).on('change', '#Email', function () {
        var oldEmail = $("#OldEmail").val();
        var newEmail = $("#Email").val();
        if (newEmail != oldEmail) {
            $(".security").removeClass("hidden-display");
            $(".security").addClass("active-display");
        }
    });
    $(document).on('change', '#ReferralCode', function () {
        var oldReferralCode = $("#OldReferralCode").val();
        var referralCode = $("#ReferralCode").val();
        if (referralCode != oldReferralCode) {
            $(".security").removeClass("hidden-display");
            $(".security").addClass("active-display");
        }
    });
    $(document).on('change', '#BankID', function () {
        $('#frm-capnhat').formValidation('updateStatus', 'BankID', 'NOT_VALIDATED').formValidation('validateField', 'BankID');
    });
    $(document).on('change', '#BankID', function () {
        var bankID = $("#BankID").val();
        $.ajax({
            url: '@Url.Action("GetBranchList", "Account", new { area = "" })?bankID=' + bankID + "&userID=" + $("#UserID").val(),
            type: 'GET',
            mimeType: "multipart/form-data",
            contentType: false,
            processData: false,
            async: false,
            cache: false,
            success: function (data) {
                $("#Bank_BranchID").html(data)
                $("#Bank_BranchID").selectpicker("refresh");
                $('#frm-capnhat').formValidation('updateStatus', 'Bank_BranchID', 'NOT_VALIDATED').formValidation('validateField', 'Bank_BranchID');
            }
        });
    });
    $(document).on('change', '#Bank_BranchID', function () {
        $('#frm-capnhat').formValidation('updateStatus', 'Bank_BranchID', 'NOT_VALIDATED').formValidation('validateField', 'Bank_BranchID');
    });
    $(document).on('change', '#ReferralCode', function () {
        $('#frm-capnhat').formValidation('updateStatus', 'ReferralCode', 'NOT_VALIDATED').formValidation('validateField', 'ReferralCode');
    });
</script>
<script>
    $(document).ready(function () {
        $('.datetimepicker1').datetimepicker({
            format: "DD/MM/YYYY"
        }).on("dp.change", function (e) {
            $('#frm-capnhat').formValidation('updateStatus', 'DateOfBirth', 'NOT_VALIDATED').formValidation('validateField', 'DateOfBirth');
        });
    });
</script>
<script>



    function validate() {
        if ($('#UserId').val().length == 0) {
            alertify.error("Chưa người lập hóa đơn");
            $('#UserId').focus().select();

            return false;
        }
        if ($('#Note').val().length == 0) {
            alertify.error("Chưa nhập nội dung");
            $('#Note').focus().select();

            return false;
        }
        // neu vao nhap thi kiem tra
        var arrRemain = $('[name=remainProduct]');
        var totalProduct = $('[name=totalProduct]');
        var arrStatus = $('[name=status]');
        var arrNote = $('[name=description]');
        for (var i = 0; i < arrRemain.length; i++) {
            var remain = arrRemain[i];
            var product = totalProduct[i];
            var status = arrStatus[i];
            var note = arrNote[i + 1];

            if (product.value.length == 0) {
                alertify.error("Chưa nhập tổng số thực tế");
                product.focus();

                return false;
            }
            if (remain.value.length == 0) {
                alertify.error("Chưa nhập tổng số sản phẩm còn lại thực tế");
                remain.focus();

                return false;
            }

            if (status.value.length == 0) {
                alertify.error("Chọn trạng thái sản phẩm trong kho");
                status.focus();

                return false;
            }
            if (note.value.length == 0) {
                alertify.error("Thêm mô tả");
                note.focus();

                return false;
            }
        }

        return true;
    }
    function validateNumber(e) {
        if ((e.keyCode > 47 && e.keyCode < 58) || e.keyCode == 44)
            return true;
        else
            return false;
    }
    function saveData() {
        if (validate()) {
            var a = new FormData(document.getElementById('frm-capnhat'));
            var arr = [];
            for (var i = 0; i < dataModel.length; i++) {
                var item = dataModel[i];
                var index = i + 1;
                var obj = {
                    ProductId: item.Product.ProductId,
                    OrderId: item.Order.OrderId,
                    Unit: item.OrderDetails.DetailsUnits,
                    Total: item.OrderDetails.DetailNumber,
                    TotalRemaining: item.TotalRemain,
                    Note: $("#description_" + index).val(),
                    StatusID: $("#status_" + index).val(),
                    InventoryId: a.get("Id"),
                    TotalNow: $("#totalProduct_" + index).val(),
                    TotalRemainNow: $("#remainProduct_" + index).val(),
                    TotalUsed: item.TotalUse
                }
                arr.push(obj);
            }
            var params = {
                UserId: a.get("UserId"),
                Note: a.get("Note"),
                Id: a.get("Id"),
                StatusID: "@EnumInventoryStatus.DAY_DU",
                list: arr
            }
            console.log(params);
            $.ajax({
                url: '@Url.Action("Update", "Inventorys", new { area = "QuanTri" })',
                type: 'POST',
                data: params,
                success: function (data) {
                    if (data.kq == "ok") {
                        alertify.success(data.msg);
                        window.location.href = '@Url.Action("MainPage", "Inventorys", new { area= "QuanTri" })';
                    }
                    else {
                        alertify.error(data.msg);
                        document.getElementById("btn-save").disabled = false;
                        $("#btn-save").removeClass("disabled");
                    }
                }
            });
        }
    }
    function change_alias(alias) {
        var str = alias;
        str = str.toLowerCase();
        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
        str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
        str = str.replace(/đ/g, "d");
        str = str.replace(/!|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, " ");
        str = str.replace(/ + /g, " ");
        str = str.trim();
        return str;
    }
    function EnterUserName(evt) {
        var val = evt.value;
        $('#Phone').val(val);
    }
</script>
<script>
    function Export_Excel() {
        window.location.href = '@Url.Action("Export_Excel", "Inventorys", new { area = "QuanTri" })?id=' + $('#userId').val() + '&fromDate=' + $('[name = FromDate]').val() + '&toDate=' + $('[name = ToDate]').val() + "&tranType=" + $('#tranType').val();
    }
</script>
